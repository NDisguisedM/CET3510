#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <time.h>
//using namespace std makes the cin, cout, endl, hex, and dec overdefined, so using std::____; is the solution
using std::cin;
using std::cout;
using std::endl;
using std::hex;
using std::dec;






///---FUNCTION DECLARATIONS---///

//signed addition/subtraction
void addition(short int x, short int y);
void subtraction(short int x, short int y);
//unsigned addition/subtraction
void un_addition(unsigned short int x, unsigned short int y);
void un_subtraction(unsigned short int x, unsigned short int y);
//multiplication
void multiplication(short int x, short int y); 
void un_multiplication(unsigned short int x, unsigned short int y); 
//signed divistion
void division_quo(short int x, short int y); 
void division_mod(short int x, short int y);
void un_division_quo(short int x, short int y);
void un_division_mod(short int x, short int y);






///---MAIN---///
int main()
{ 
	char ch, ch1, ch2, ch3; 
	signed short r1, r2;
	unsigned short ur1, ur2;

	cout << "Start your calculator? (Y/N)\t:" << endl;
	cin >> ch;
	ch1 = ch;
	while (ch1 == 'Y' || ch1 == 'y')
	{
	Menu:
		cout << "Menu:\n";
		cout << "1, Signed Integer Arithmetic Operation (16-bit)\n";
		cout << "2, Unsigned Integer Arithmetic Operation (16-bit)\n";
		cout << "3, Exit\n";
		cout << "Menu Options:\n";
		cin >> ch;	//ch is a container
		ch2 = ch;	// ch2 is used for submenu control
	Submenu:
		if (ch2 == '1')
		{								
			cout << "Submenu - input your choice:\n";
			cout << "a, \t16 bit signed number addition and display the sum in Decimal and Hex format\n";
			cout << "b, \t16 bit signed number subtraction and display the difference in Decimal and Hex format\n";
			cout << "c, \t16 bit signed number multiplication and display the result in Decimal and Hex format\n";
			cout << "d, \t32 bit signed number divided by 16 bit unsigned number and display the QUOTIENT in decimal and Hex format\n";
			cout << "e, \t32 bit signed number divided by 16 bit unsigned number and display the REMAINDER in decimal and Hex format\n";
			cout << "To return to main menu, type any letter except a,b,c,d, or e\n";	//user instruction for activating the default part of the switch
			cin >> ch;
			ch3 = ch;
			switch (ch3) //signed switch
			{
			case 'a':
			{
				cout << "Input two signed numbers in decimal format\n";
				cin >> r1 >> r2;
				addition(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			case 'b':
			{
				cout << "Input two signed numbers in decimal format\n";
				cin >> r1 >> r2;
				subtraction(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			case 'c':
			{
				cout << "Input two signed numbers in decimal format\n";
				cin >> r1 >> r2;
				multiplication(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			case 'd':
			{
				cout << "Input two signed numbers in decimal format\n";
				cin >> r1 >> r2;
				division_quo(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			case 'e':
			{
				cout << "Input two signed numbers in decimal format\n";
				cin >> r1 >> r2;
				division_mod(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			default: goto Menu;
			}
		}
		else if (ch2 == '2')			
		{								
			cout << "Submenu - input your choice\n";
			cout << "a, \t16 bit unsigned number addition and display the sum in Decimal and Hex format\n";
			cout << "b, \t16 bit unsigned number subtraction and display the difference in Decimal and Hex format\n";
			cout << "c, \t16 bit unsigned number multiplication and display the product in Decimal and Hex format\n";
			cout << "d, \t32 bit unsigned number divided by 16 bit unsigned number and display the QUOTIENT in decimal and Hex format\n";
			cout << "e, \t32 bit unsigned number divided by 16 bit unsigned number and display the REMAINDER in decimal and Hex format\n";
			cout << "To return to main menu, type any letter except a,b,c,d, or e\n";	//user instruction for activating the default part of the switch
			cin >> ch;
			ch3 = ch;
			switch (ch3) //unsigned switch
			{
			case 'a':
			{
				cout << "Input two unsigned numbers in decimal format\n";
				cin >> ur1 >> ur2;
				un_addition(ur1, ur2);
				cout << "=======================================================================\n";
				break;
			}
			case 'b':
			{
				cout << "Input two unsigned numbers in decimal format\n";
				cin >> ur1 >> ur2;
				un_subtraction(ur1, ur2);
				cout << "=======================================================================\n";
				break;
			}
			case 'c':
			{
				cout << "Input two unsigned numbers in decimal format\n";
				cin >> r1 >> r2;
				un_multiplication(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			case 'd':
			{
				cout << "Input two unsigned numbers in decimal format\n";
				cin >> r1 >> r2;
				un_division_quo(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			case 'e':
			{
				cout << "Input two unsigned numbers in decimal format\n";
				cin >> r1 >> r2;
				un_division_mod(r1, r2);
				cout << "=======================================================================\n";
				break;
			}
			default: goto Menu;
			}
		}
		else if (ch2 == '3')							//if 3 is typed, exit programm
		{
			goto EndLable;
		}
		else											//wrong inputs catcher, just in case
		{
			cout << "Unexpected input, please enter 1, 2, or 3\n";
		}

	EndMenu:											//End menu, decides if the programm is to be ended or to be continued
		cout << "Continue operations? Y/N\n";
		cin >> ch;
		ch2 = ch;
		if (ch2 == 'N' || ch2 =='n')					//if N is typed, exit the programm
		{
			goto EndLable;
		}
		else											//if anything other than N is typed, continue to Menu
		{
			goto Menu;
		}

	EndLable:											//EndLable completely ends the programm. EndMenu leads here too
		cout << "Exit program\n";
		system("pause");
		exit(0);
		return 0;
	}
}





///---FUNCTION DEFINITIONS---///

///___SIGNED___///
//signed addition
void addition(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		add AX, BX;
		mov r, AX;
	}
	cout << "The Decimal sum of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex sum of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}

//signed subtraction
void subtraction(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		sub AX, BX;
		mov r, AX;
	}
	cout << "The Decimal subtraction of " << dec << x << " minus " << dec << y << " is " << dec << r << endl;
	cout << "The Hex subtraction of " << hex << x << " minus " << hex << y << " is " << hex << r << endl;
}

//signed multiplication
void multiplication(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		CWD;			//extend A 
		imul BX;		//multiply by bx, store in ax by default
		mov r, AX;

	}
	cout << "The Decimal product of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex product of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}

//signed division with quotient
void division_quo(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		CWD;		//extending 16bit AX to 32bits
		idiv BX;
		mov r, AX;	//move quotient from DX to r for future use
	}
	cout << "The Decimal quotient of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex quotient of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}

//signed division with modulus
void division_mod(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		CWD;		//extending 16bit AX to 32bits
		idiv BX;
		mov r, DX;	//move remainder from DX to r for future use
	}
	cout << "The Decimal modulus of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex modulus of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}





///---UNSIGNED---///
//unsigned subtraction
void un_subtraction(unsigned short int x, unsigned short int y)
{
	unsigned short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		sub AX, BX;
		mov r, AX;
	}
	cout << "The Decimal subtraction of " << dec << x << " minus " << dec << y << " is " << dec << r << endl;
	cout << "The Hex subtraction of " << hex << x << " minus " << hex << y << " is " << hex << r << endl;
}

//unsigned addition
void un_addition(unsigned short int x, unsigned short int y)
{
	unsigned short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		add AX, BX;
		mov r, AX;
	}
	cout << "The Decimal sum of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex sum of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}

//unsigned multiplication
void un_multiplication(unsigned short int x, unsigned short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		CWD;		//extend A 
		mul BX;		//multiply by bx, store in ax by default
		mov r, AX;
	}
	cout << "The Decimal product of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex product of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}

//signed division with quotient
void un_division_quo(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		CWD;		//extending 16bit AX to 32bits
		div BX;
		mov r, AX;	//move quotient from DX to r for future use
	}
	cout << "The Decimal quotient of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex quotient of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}

//signed division with modulus
void un_division_mod(short int x, short int y)
{
	short int r;
	_asm {
		mov AX, x;
		mov BX, y;
		CWD;			//extending 16bit AX to 32bits
		div BX;
		mov r, DX;		//move remainder from DX to r for future use
	}
	cout << "The Decimal modulus of " << dec << x << " and " << dec << y << " is " << dec << r << endl;
	cout << "The Hex modulus of " << hex << x << " and " << hex << y << " is " << hex << r << endl;
}
