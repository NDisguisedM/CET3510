#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


using std::cout;
using std::cin;
using std::endl; //NM98


//Part 1 functions:
float faddition(float xNM98, float yNM98);
float fsubtraction(float xNM98, float yNM98);
float fmultiplication(float xNM98, float yNM98);
float fdivision(float dividendNM98, float divisorNM98);
double daddition(double xNM98, double yNM98);
double dsubtraction(double xNM98, double yNM98);

//Part 2 functions:
float fsquareroot(float xNM98);
float fabsolute(float xNM98);
float temperatureConv(float fahrenheitNM98);
double dmultiplication(double xNM98, double yNM98);
double ddivision(double dividentNM98, double divisorNM98);
double dpower(double dNM98, double powerNM98);


int main()
{
	//declaration of many variables, inline to save space
	char chNM98, ch1NM98, ch2NM98, ch3NM98;
	float f1NM98, f2NM98, fsumNM98, fsubNM98, fprodNM98, fquotNM98, fsqrtNM98, fabsNM98, ftempConvNM98;
	double d1NM98, d2NM98, dsumNM98, dsubNM98, dprodNM98, dquotNM98, dpowNM98;
	cout << "Start the floating point calculator? Y/N\n";
	cin >> chNM98;
	ch1NM98 = chNM98;

	while (ch1NM98 == 'Y' || ch1NM98 == 'y')
	{
	MenuNM98:
		cout << "MENU:\n";
		cout << "1, Single precision floating point arithmetic operation(32-bit)\n";
		cout << "2, Double precision floating point arithmetic operation(64-bit)\n";
		cout << "3, Exit\n";

		cin >> chNM98;
		cout << "You chose: " << chNM98 << endl;
		cout << "Menu Options:\n";
		ch2NM98 = chNM98;
		if (ch2NM98 == '1')
		{
		Submenu1:
			cout << "a, Input two floating point operands for addition and display the sum in the decimal format\n";
			cout << "b, Input two floating point operands for subtraction and display the difference in the decimal format\n";
			cout << "c, Input two floating point operands for multiplication and display the product in the decimal format\n";
			cout << "d, Input two floating point operands for division and display the quotient in the decimal format\n";
			cout << "e, Input one floating point operand  for finding the square root and display the result in decimal format\n";
			cout << "f, Input one floating point operand  for finding the absolute value and display the result in decimal format\n";
			cout << "g, Input two floating point operands for Conversion of Fahrenheit to Celsius and display the result in decimal format\n";
			cout << "q, Quit\n";

			cin >> chNM98;
			cout << "You chose: " << chNM98 << endl;
			ch3NM98 = chNM98;
			switch (ch3NM98)
			{
			case'a':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> f1NM98;
				cin >> f2NM98;
				cout << "The first floating point value is " << f1NM98 << endl;
				cout << "The second floating point value is " << f2NM98 << endl;
				fsumNM98 = faddition(f1NM98, f2NM98);
				cout << "The sum of " << f1NM98 << " and " << f2NM98 << " is " << fsumNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case'b':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> f1NM98;
				cin >> f2NM98;
				cout << "The first floating point value is " << f1NM98 << endl;
				cout << "The second floating point value is " << f2NM98 << endl;
				fsubNM98 = fsubtraction(f1NM98, f2NM98);
				cout << "The difference of " << f1NM98 << " and " << f2NM98 << " is " << fsubNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case'c':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> f1NM98;
				cin >> f2NM98;
				cout << "The first floating point value is " << f1NM98 << endl;
				cout << "The second floating point value is " << f2NM98 << endl;
				fprodNM98 = fmultiplication(f1NM98, f2NM98);
				cout << "The product of " << f1NM98 << " and " << f2NM98 << " is " << fprodNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case'd':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> f1NM98;
				cin >> f2NM98;
				cout << "The first floating point value is " << f1NM98 << endl;
				cout << "The second floating point value is " << f2NM98 << endl;
				fquotNM98 = fdivision(f1NM98, f2NM98);
				cout << "The quotient of " << f1NM98 << " and " << f2NM98 << " is " << fquotNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case'e': //square root
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> f1NM98;
				cout << "The first floating point value is " << f1NM98 << endl;
				fsqrtNM98 = fsquareroot(f1NM98);
				cout << "The sqrt of " << f1NM98 << " is " << fsqrtNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case'f'://absolute value
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> f1NM98;
				cout << "The first floating point value is " << f1NM98 << endl;
				fabsNM98 = fabsolute(f1NM98);
				cout << "The absolute value of " << f1NM98 << " is " << fabsNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case'g'://F to C 
			{
				cout << "Input the floating point operands for Fahrenheit in decimal format: \n";
				cin >> f1NM98;
				cout << "The floating point value is " << f1NM98 << endl;
				ftempConvNM98 = temperatureConv(f1NM98);
				cout << "The temperature in C of " << f1NM98 << "F, is: " << ftempConvNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			default: goto QuitLableNM98;
			}
			goto MenuNM98;
		}
		else if (ch2NM98 == '2')
		{
		Submenu2NM98:
			cout << "a, Input two floating point operands for addition and display the sum in the decimal format.\n";
			cout << "b, Input two floating point operands for subtraction and display the difference in the decimal format.\n";
			cout << "c, Input two floating point operands for multiplication and display the difference in the decimal format.\n";
			cout << "d, Input two floating point operands for division and display the difference in the decimal format.\n";
			cout << "e, Input two floating point operands for number^power and display the difference in the decimal format.\n";
			cout << "q, Quit\n";

			cin >> chNM98;
			cout << "You chose: " << chNM98 << endl;
			ch3NM98 = chNM98;
			switch (ch3NM98)
			{
			case 'a':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> d1NM98;
				cin >> d2NM98;
				cout << "The first floating point value is " << d1NM98 << endl;
				cout << "The second floating point value is " << d2NM98 << endl;
				dsumNM98 = daddition(d1NM98, d2NM98);
				cout << "The sum of " << d1NM98 << " and " << d2NM98 << " is " << dsumNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case 'b':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> d1NM98;
				cin >> d2NM98;
				cout << "The first floating point value is " << d1NM98 << endl;
				cout << "The second floating point value is " << d2NM98 << endl;
				dsubNM98 = dsubtraction(d1NM98, d2NM98);
				cout << "The difference of " << d1NM98 << " and " << d2NM98 << " is " << dsubNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case 'c':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> d1NM98;
				cin >> d2NM98;
				cout << "The first floating point value is " << d1NM98 << endl;
				cout << "The second floating point value is " << d2NM98 << endl;
				dprodNM98 = dmultiplication(d1NM98, d2NM98);
				cout << "The product of " << d1NM98 << " and " << d2NM98 << " is " << dprodNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			case 'd':
			{
				cout << "Input the two floating point operands in decimal format: \n";
				cin >> d1NM98;
				cin >> d2NM98;
				cout << "The first floating point value is " << d1NM98 << endl;
				cout << "The second floating point value is " << d2NM98 << endl;
				dquotNM98 = ddivision(d1NM98, d2NM98);
				cout << "The quotient of " << d1NM98 << " and " << d2NM98 << " is " << dquotNM98 << endl;
				cout << "=============================================================";
				break;
			}
			case 'e':
			{
				cout << "Input the two floating point operands in decimal format: [number, then power] \n";
				cin >> d1NM98;
				cin >> d2NM98;
				cout << "The entered number is " << d1NM98 << endl;
				cout << "The entered power is " << d2NM98 << endl;
				dpowNM98 = dpower(d1NM98, d2NM98);
				cout << "The number " << d1NM98 << " to the power of " << d2NM98 << " is " << dpowNM98 << endl;
				cout << "=============================================================\n";
				break;
			}
			default: goto QuitLableNM98;
			}
			goto MenuNM98;
		}
		else
		{
			goto EndLableNM98;
		}
	QuitLableNM98:
		cout << "Would you like to continue floating point arithmetic operations? Y/N: \n";
		cin >> chNM98;
		ch1NM98 = chNM98;
	}
EndLableNM98:
	cout << "Exit program\n";
	system("pause");
	exit(0);
	return 0;
}
float faddition(float xNM98, float yNM98)
{
	float fNM98;
	_asm
	{
		FLD xNM98;	//PUSH x
		FLD yNM98;	//PUSH y, Move x further up stack
		FADD;	//add stack[0] and stack[1]. store at stack[0]
		FST fNM98;	//copy to f
	}
	return fNM98;
}
float fsubtraction(float xNM98, float yNM98)
{
	float fNM98;
	_asm
	{
		FLD xNM98;
		FLD yNM98;
		FSUB ST(1), ST(0);	//sub stack[0]-stack[1], store in stack[1]
		FXCH ST(1);			//move difference to stack[0]
		FST fNM98;				//copy to f
	}
	return fNM98;
}
float fmultiplication(float xNM98, float yNM98)
{
	float fNM98;
	_asm
	{
		FLD xNM98;
		FLD yNM98;
		FMUL;	//mul stack[0] and stack[1], store at stack[0]
		FSTP fNM98; //copy to f and pop from stack[0]
	}
	return fNM98;
}
float fdivision(float xNM98, float yNM98)
{
	float fNM98;
	_asm
	{
		FLD xNM98;
		FLD yNM98;
		FDIV ST(1), ST(0);	//div stack[0]-stack[1], store in stack[1]
		FXCH ST(1);			//move difference to stack[0]
		FSTP fNM98;				//copy to f and pop from stack[0]		
	}
	return fNM98;
}
float fsquareroot(float xNM98)
{
	float fNM98;
	_asm
	{
		FLD xNM98;
		FSQRT;
		FST fNM98;
	}
	return fNM98;
}
float fabsolute(float xNM98)
{
	float fNM98;
	_asm
	{
		FLD xNM98;
		FABS;
		FST fNM98;
	}
	return fNM98;
}
float temperatureConv(float fahrenheitNM98)
{
	float fNM98;
	float f1NM98;			//to store the first result
	float f2NM98;			//to store the second result
	float f32NM98 = 32.0;
	float f5NM98 = 5.0;
	float f9NM98 = 9.0;
	_asm
	{
		//subtract 32
		FLD fahrenheitNM98;
		FLD f32NM98;
		FSUB ST(1), ST(0);	//sub stack[0]-stack[1], store in stack[1]
		FXCH ST(1);			//move difference to stack[0]
		FSTP f1NM98;
		//divide 9/5
		FLD f5NM98;//For F to C, it's 5/9, if it was C to F, it'd be 9/5
		FLD f9NM98;
		FDIV ST(1), ST(0);	//div stack[0]-stack[1], store in stack[1]
		FXCH ST(1);			//move difference to stack[0]
		FSTP f2NM98;
		//multiply f-32 by 9/5
		FLD f1NM98;
		FLD f2NM98;
		FMUL;
		FSTP fNM98;
	}
	return fNM98;
}

double daddition(double xNM98, double yNM98)
{
	double dNM98;
	_asm
	{
		FLD xNM98;
		FLD yNM98;
		FADD;		//add
		FST dNM98;	//copy to d
	}
	return dNM98;
}
double dsubtraction(double xNM98, double yNM98)
{
	double dNM98;
	_asm
	{
		FLD xNM98;
		FLD yNM98;
		FSUB ST(1), ST(0); //0 - 1, store in 1
		FXCH ST(1);		   //move to 0
		FST dNM98;
	}
	return dNM98;
}
double dmultiplication(double xNM98, double yNM98)
{
	double dNM98;
	_asm
	{
		FLD xNM98;
		FLD yNM98;
		FMUL;
		FSTP dNM98;
	}
	return dNM98;
}
double ddivision(double dividentNM98, double divisorNM98)
{
	double dNM98;
	_asm
	{
		FLD dividentNM98;
		FLD divisorNM98;
		FDIV ST(1), ST(0);  //division as always
		FXCH ST(1);
		FSTP dNM98;
	}
	return dNM98;
}
double dpower(double dNM98, double powerNM98)
{
	double resultNM98;
	double d1NM98 = 1;
	int iNM98;
	_asm
	{
		FLD dNM98;			//preload the register
	}
	if (powerNM98 > 0)
	{
		for (iNM98 = 1; iNM98 < powerNM98; iNM98++)
		{

			_asm
			{
				FLD dNM98;		//load the value
				FMUL;			//multiply
			}
		}	
	}
	else if (powerNM98 < 0)
	{
		for (iNM98 = 1; iNM98 > powerNM98; iNM98--)
		{

			_asm
			{
				FLD dNM98;				//load the value
				FDIV ST(1), ST(0);	//division as usual
				FXCH ST(1);
			}
		}
	}
	else
	{
		_asm
		{
			FLD d1NM98;
		}
	}
	_asm
	{
		FST resultNM98;		//unload our value
	}
	return resultNM98;
}


